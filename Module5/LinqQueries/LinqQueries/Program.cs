using System;
using System.Linq;
using System.Collections.Generic;

namespace LinqQueries
{
    class Program
    {
        static void Main(string[] args)
        {
            // 1) Получить число мужчин в коллекции; число женщин

            Person[] people = DataSet.People;

            int menCount = people.Where(p => p.Gender == Gender.Man).Count();
            int womenCount = people.Where(p => p.Gender == Gender.Woman).Count();
            Console.WriteLine($"Men:{menCount}\nWomen: {womenCount}");
            //2) Отсортировать персонажей по фамилии потом по имени, выбрать их описание в формате $"{Name} {SurName}, age {Age} lives in {City}, {Country}. He (или she, решить тернарным опертором) is {Occupation} and makes {AnnualIncome} a year. {Family status to string}, speaks {Languages Count} languages
            //3)Найти тех, кто живет в странах с  насилением больше 80 миллионов
            //4) Найти средний доход в группе персонажей(return decimal Average()) с высшим образованием(выше HECert - аналого нашего двухгодичного "младшего специалиста")
            //5) Найти тех, чей годовой доход превышает годовой доход в их стране
            //6) Найти максимальное число языков, которым владеет персонаж(return int Max()
            //7) Найти виртуозного полиглота(для которого число языков равняется числу из п.6)
            //8) Найти персонажа, который не владеет языком страны, в которой он проживает.Если такого нет - вернуть null
            //9) Найти людей, проживающих в Германии, упорядочить по возрасту от большего до меньшего, выбрать в формате $"{Name} {Surname} {Age} {City}"
            //10)Найти процентную долю тех, кто состоит в браке от общего числа персонажей
            //11) Найти тех, кто владеет двумя и более языками но получает зарплату ниже средней по их стране
            //12) Найти единственного кандидата наук, если такого нет либо если выборка больше 1 - вернуть ошибку
            //13) Найти людей из испаноговорящих стран, вернуть в формате $"{Name} {Occupation} {City} {Country}"
            //14) Найти персонажа, который живет в городе с наименьшим населением(относительно места проживания других персонажей)
            //15) Найти персонажа, который живет в городе с наименьшим абсолютным населением(город с наименьшим населением в списке городов), если такого нет - вернуть налл
            //17) Определить, какая доля людей, владеющих английским, проживает не в англоговорящих странах по отношению ко всем людям из списка, которые владеют английским
            //18) Найти самого богатого персонажа
            //19) Найти персонажа с наименьшим доходом в Британии
            //20) Отсортировать персонажей по доходу по нисходящей, потом по имени и по фамилии по восходящей
        }
    }
}
